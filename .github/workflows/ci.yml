name: Django CI

on: push

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: github-actions
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432

  SECRET_KEY: test

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.9]
        poetry-version: [1.1.12]

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Poetry
      uses: abatilo/actions-poetry@v2.0.0
      with:
          poetry-version: ${{ matrix.poetry-version }}

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install deps
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install

    - name: Run linters
      id: sfsf
      uses: akaihola/darker@1.6.1
      with:
        options: "--check --diff --isort --color"
        src: "./src"
        version: "~=1.6.1"
        lint: "flake8,pylint==2.13.1"

    - name: Run linters
      run: poetry run flake8

    - name: Run migrations
      run: poetry run python manage.py migrate

    - name: Run tests
      run: poetry run pytest
