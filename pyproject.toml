[tool.poetry]
name = "coin_assistant"
version = "0.1.0"
description = ""
authors = ["Maksimyuk <georgiy.maksimyuk@flatstack.dev>"]

[tool.poetry.dependencies]
python = "^3.10"
Django = "^4.1.4"
python-decouple = "^3.6"
django-split-settings = "^1.2.0"
psycopg2-binary = "^2.9.5"
djangorestframework = "^3.14.0"
pydantic = "^1.10.2"
django-cors-headers = "^3.13.0"
pytest = "^7.2.0"
pytest-django = "^4.5.2"
factory-boy = "^3.2.1"
black = "^22.12.0"
darker = "^1.6.1"
flake8 = "^6.0.0"
flake8-bandit = "^4.1.1"
isort = "^5.11.4"
mypy = "^0.991"
pylint = "^2.15.9"
pylint-pytest = "^1.1.2"

[tool.poetry.dev-dependencies]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
skip_gitignore = true
line_length = 79

[tool.mypy]
ignore_missing_imports = true

[tool.darker]
diff = true
check = true
isort = true
line-length = 79
log_level = "INFO"
lint = [
    "pylint"
]

[tool.pylint.MASTER]
ignore-paths = [
    "tests",
]
load-plugins=[
    "pylint_pytest",
    "pylint.extensions.code_style",
    "pylint.extensions.typing",
    "pylint.extensions.mccabe",
    "pylint.extensions.broad_try_clause",
    "pylint.extensions.confusing_elif",
    "pylint.extensions.eq_without_hash",
    "pylint.extensions.private_import",
    "pylint.extensions.overlapping_exceptions",
    "pylint.extensions.set_membership",
]

[tool.pylint.DESIGN]
max-complexity=10

[tool.pylint.SIMILARITIES]
min-similarity-lines=4
ignore-comments="yes"
ignore-docstrings="yes"
ignore-imports="yes"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--maxfail=1 -v -s --cov=./ --darker --disable-pytest-warnings"
testpaths = [
    "tests",
]

